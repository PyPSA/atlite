name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: ['*']
  schedule:
  - cron: "0 5 * * TUE"

# Cancel any in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Build the Python SDist and wheel, performs metadata and readme linting
    name: Build and verify package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0   # Needed for setuptools_scm
    - uses: hynek/build-and-inspect-python-package@v2
      id: baipp

    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  test:
    # Test package build in matrix of OS and Python versions
    name: Test package
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(needs.build.outputs.python-versions) }}
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    env:
      MPLBACKEND: Agg  # https://github.com/orgs/community/discussions/26434

    steps:
    - name: Setup cache and secrets (Linux & MacOS)
      if: runner.os != 'Windows'
      run: |
        echo "CACHE_PATH=$HOME/.atlite_cache" >> $GITHUB_ENV
        echo "today=$(date +'%Y-%m-%d')"  >> $GITHUB_ENV
        echo -ne "url: ${{ vars.CDSAPI_URL }}\nkey: ${{  secrets.CDSAPI_TOKEN  }}\n" > ~/.cdsapirc
      shell: bash

    - name: Setup cache and secrets (Windows)
      if: runner.os == 'Windows'
      run: |
        echo CACHE_PATH=%USERPROFILE%\.atlite_cache >> %GITHUB_ENV%
        echo url: ${{ vars.CDSAPI_URL }} > %USERPROFILE%\.cdsapirc
        echo key: ${{ secrets.CDSAPI_TOKEN }} >> %USERPROFILE%\.cdsapirc
        for /f "tokens=2 delims==" %%a in ('"wmic os get localdatetime /value"') do set "today=%%a"
        set mydate=%today:~0,4%-%today:~4,2%-%today:~6,2%
        echo today=%mydate% >> %GITHUB_ENV%
      shell: cmd

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache retrieved cutouts
      uses: actions/cache@v4
      with:
        path: ${{ env.CACHE_PATH }}
        key: retrieved-cutouts-${{ env.today }}
        enableCrossOsArchive: true
      id: cache-env
      
    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Install package and dependencies
      run: |
        python -m pip install uv
        uv pip install --compile --system "$(ls dist/*.whl)[dev]"
    - name: Test with pytest
      run: |
        coverage run -m pytest . --cache-path=${{ env.CACHE_PATH }} --verbose
        coverage xml

    - name: Upload code coverage report
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}