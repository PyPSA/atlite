# SPDX-FileCopyrightText: 2021 The Atlite Authors
#
# SPDX-License-Identifier: CC0-1.0

repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.4.0
  hooks:
  - id: check-merge-conflict
  - id: end-of-file-fixer
  - id: fix-encoding-pragma
  - id: mixed-line-ending
  - id: trailing-whitespace
  - id: check-added-large-files
    args: ['--maxkb=2000']

# Sort package imports alphabetically
- repo: https://github.com/PyCQA/isort
  rev: 5.12.0
  hooks:
  - id: isort
    args: ["--profile", "black", "--filter-files"]

# Convert relative imports to absolute imports
- repo: https://github.com/MarcoGorelli/absolufy-imports
  rev: v0.3.1
  hooks:
  - id: absolufy-imports

# Find common spelling mistakes in comments and docstrings
- repo: https://github.com/codespell-project/codespell
  rev: v2.2.4
  hooks:
  - id: codespell
    args: ['--ignore-regex="(\b[A-Z]+\b)"'] # Ignore capital case words, e.g. country codes
    types_or: [python, rst, markdown]
    files: ^(scripts|doc)/

# Make docstrings PEP 257 compliant
- repo: https://github.com/PyCQA/docformatter
  rev: v1.6.4
  hooks:
  - id: docformatter
    args: ['--in-place', '--make-summary-multi-line', '--pre-summary-newline']

# Formatting with "black" coding style
- repo: https://github.com/psf/black
  rev: 23.3.0
  hooks:
  # Format Python files
  - id: black
  # Format Jupyter Python notebooks
  - id: black-jupyter

- repo: https://github.com/fsfe/reuse-tool
  rev: v1.1.2
  hooks:
  - id: reuse

# Do YAML formatting (before the linter checks it for misses)
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.8.0
  hooks:
  - id: pretty-format-yaml
    args: [--autofix, --indent, '2', --preserve-quotes]
